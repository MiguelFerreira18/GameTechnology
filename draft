How it works in Ashes of creation:



The transfer of a player in this system involves a seamless and efficient process where the player's authoritative state can move from one server to another without disrupting the client experience. Here's how it works:

    Authority Representation: Each player character (or "actor") has an authoritative server that manages its state. When a player moves from one server to another, their actorâ€™s authority can be promoted or demoted without creating new instances of that actor.

    Proxy System: When the player moves, if they teleport or switch servers, the system can promote the proxy actor on the new server to become the authoritative actor. Simultaneously, the original authoritative actor on the previous server is demoted to a proxy. This allows the game to maintain a single authoritative copy of the actor at all times.

    Data Reuse: Instead of creating or destroying actor instances (which can be costly in terms of performance), the system reuses existing actor data. This reuse reduces overhead, allowing for a smoother transition without noticeable hitches in gameplay.

    Client Experience: The goal is to ensure that clients do not notice these transitions. All actions are handled on the server side, which means that as players switch servers, they experience minimal disruption, maintaining a seamless gaming experience.

    Event Communication: The system communicates events between servers using a decentralized approach, where servers collaborate and share relevant information. This eliminates potential bottlenecks associated with centralized systems, enabling smoother transfers and better scalability.

    Fault Tolerance: If one server goes down during a transfer, other servers can continue operating normally. This means that while the player may be disconnected from the affected server, the rest of the game remains unaffected, enhancing overall stability.

How it works in Star Citizen


exemplo: https://www.reddit.com/r/starcitizen/comments/1blj83n/going_from_one_server_to_another_is_super_smooth/
